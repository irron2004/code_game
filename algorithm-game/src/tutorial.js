export const TUTORIAL_STEPS = [
  {
    id: 'tutorial-1',
    title: '1단계 · 직선 길 열기 (BFS)',
    description: '명령 없이 재생을 눌러 보세요. 가장 가까운 칸부터 찾아가요.',
    bullets: [
      '재생 ▶ 버튼을 눌러 탐색을 시작해요.',
      '경로가 목표에 닿으면 다음 단계로 이동하세요.',
    ],
    rules: { algorithm: 'BFS', allowDiagonal: false, useWeights: false },
    level: {
      version: 1,
      cols: 10,
      rows: 8,
      start: { x: 1, y: 1 },
      goal: { x: 8, y: 6 },
      cells: [
        0,0,0,0,0,0,0,0,0,0,
        0,2,1,1,1,0,0,0,0,0,
        0,0,1,0,1,0,1,0,0,0,
        0,0,0,0,0,0,1,0,0,0,
        0,0,0,0,0,0,1,0,0,0,
        0,0,0,0,0,0,1,0,0,0,
        0,0,0,1,1,1,0,0,0,0,
        0,0,3,0,0,0,0,0,0,0,
      ],
    },
  },
  {
    id: 'tutorial-2',
    title: '2단계 · 숲/모래 가중치 (Dijkstra)',
    description: '숲=2, 모래=3처럼 계산해요. 더 싸게 가려면 어떻게 할까요?',
    bullets: [
      '알고리즘을 BFS와 Dijkstra로 번갈아 실행해 차이를 확인해요.',
      '지형 가중치 옵션을 켠 상태에서 경로 비용을 비교해요.',
    ],
    rules: { algorithm: 'Dijkstra', allowDiagonal: false, useWeights: true },
    level: {
      version: 1,
      cols: 12,
      rows: 8,
      start: { x: 1, y: 3 },
      goal: { x: 10, y: 4 },
      cells: [
        1,1,1,1,1,1,1,1,1,1,1,1,
        1,2,0,0,5,5,5,0,0,0,0,1,
        1,0,0,4,4,4,4,4,4,0,0,1,
        1,0,0,0,4,4,4,4,5,5,0,1,
        1,0,0,0,4,4,4,4,5,0,3,1,
        1,0,0,4,4,4,4,4,4,0,0,1,
        1,0,0,5,5,5,5,0,0,0,0,1,
        1,1,1,1,1,1,1,1,1,1,1,1,
      ],
    },
  },
  {
    id: 'tutorial-3',
    title: '3단계 · 대각선 + A*',
    description: '대각선을 켜면 옆길로 지름길이 생겨요. A*는 먼저 가까워 보이는 곳으로 가는 똑똑한 방법이에요.',
    bullets: [
      '대각선 이동을 켜고 A*로 실행해요.',
      '대각선을 끄면 경로가 어떻게 달라지는지 확인해 보세요.',
    ],
    rules: { algorithm: 'AStar', allowDiagonal: true, useWeights: false },
    level: {
      version: 1,
      cols: 12,
      rows: 10,
      start: { x: 1, y: 1 },
      goal: { x: 10, y: 8 },
      cells: [
        0,0,0,0,0,0,0,0,0,0,0,0,
        0,2,1,0,0,0,0,0,0,0,0,0,
        0,0,0,1,0,0,0,0,0,0,0,0,
        0,0,0,0,1,0,0,0,0,0,0,0,
        0,0,0,0,0,1,0,0,0,0,0,0,
        0,0,0,0,0,0,1,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,1,3,0,
        0,0,0,0,0,0,0,0,0,0,0,0,
      ],
    },
  },
];
